{"version":3,"sources":["utils/api.js","components/Preloader/Preloader.js","components/ProtectedRoute/ProtectedRoute.js","images/logo.svg","components/Header/Header.js","utils/filterUsers.js","hooks/useForm.js","components/SearchForm/SearchForm.js","utils/getTime.js","components/UserCard/UserCard.js","components/UsersList/UsersList.js","components/Footer/Footer.js","components/Main/Main.js","components/InfoMessage/InfoMessage.js","components/FormPage/FormPage.js","components/Login/Login.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","userId","this","_baseUrl","_id","res","_res","ok","json","Promise","reject","userData","a","fetch","method","headers","body","JSON","stringify","_getResponseData","token","authorization","Preloader","className","ProtectedRoute","Component","component","props","isChecking","isLoggedIn","to","Header","onSignOut","src","logo","alt","type","onClick","filterUsers","users","key","onlyActive","filter","user","username","firstName","first_name","lastName","last_name","String","toLowerCase","indexOf","is_active","useForm","useState","values","setValues","errors","setErrors","formValidity","setFormValidity","handleChange","e","target","name","value","validationMessage","validateForm","form","checkValidity","reset","SearchForm","checkBoxState","onCheck","onSubmit","onReset","React","useEffect","searchKey","localStorage","getItem","id","onChange","preventDefault","placeholder","minLength","required","disabled","htmlFor","checked","getTime","time","Date","parse","toLocaleString","UserCard","last_login","UsersList","setSearchKey","activeUsersOnly","setActiveUsersOnly","shownUsers","setShownUsers","isNothingFound","setIsNothingFound","filteredUsers","length","setItem","removeItem","sort","b","map","Footer","Main","InfoMessage","isShown","code","messageText","setMessageText","messageType","FormPage","title","buttonText","captionText","children","isValid","validate","infoMessage","autoComplete","noValidate","Login","isSubmitting","buttonState","password","pattern","App","history","useHistory","setUsers","setIsLoggedIn","setIsChecking","setIsSubmitting","setButtonState","setInfoMessage","handleLoading","loading","text","userToken","checkAndGet","push","handleSignIn","signInUser","status","handleSignOut","clear","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9cc14ac3.chunk.js","sourcesContent":["class Api {\n  constructor(baseUrl, userId) {\n    this._baseUrl = baseUrl;\n    this._id = userId;\n  }\n\n  _getResponseData(res) {\n    this._res = res;\n\n    if (!this._res.ok) {\n      return Promise.reject(this._res);\n    }\n\n    return this._res.json();\n  }\n\n  async signInUser(userData) {\n    const res = await fetch(`${this._baseUrl}/api-token-auth/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n\n    return this._getResponseData(res);\n  }\n\n  async checkAndGet(token) {\n    const res = await fetch(`${this._baseUrl}/api/v1/users/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Token ${token}`,\n      },\n    });\n\n    return this._getResponseData(res);\n  }\n}\n\nconst api = new Api('https://emphasoft-test-assignment.herokuapp.com');\n\nexport default api;\n","import React from 'react';\nimport './Preloader.css';\n\nconst Preloader = () => (\n  <div className=\"preloader\">\n    <div className=\"preloader__container\">\n      <span className=\"preloader__round\" />\n    </div>\n  </div>\n);\n\nexport default Preloader;\n","/* eslint-disable*/\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Preloader from '../Preloader/Preloader';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.isChecking ? (\n          <Preloader />\n        ) : props.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/signin\" />\n        )\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/logo.48badda0.svg\";","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../images/logo.svg';\n\nimport './Header.css';\n\nfunction Header(props) {\n  const { onSignOut } = props;\n\n  return (\n    <header className=\"header\">\n      <Link className=\"header__logo-link\" to=\"/\">\n        <img\n          className=\"header__logo\"\n          src={logo}\n          alt=\"Emphasoft Logo\"\n        />\n      </Link>\n      <button\n        aria-label=\"Sign Out\"\n        className=\"header__signout-button\"\n        type=\"button\"\n        onClick={onSignOut}\n      >\n        Sign Out\n      </button>\n    </header>\n  );\n}\n\nexport default Header;\n","function filterUsers(users, key, onlyActive) {\n  let res = [];\n\n  if (!key) {\n    res = users;\n  } else {\n    res = users.filter((user) => {\n      const {\n        username,\n        firstName = user.first_name,\n        lastName = user.last_name,\n      } = user;\n\n      return (\n        String(username).toLowerCase().indexOf(key.toLowerCase()) !== -1\n        || String(firstName).toLowerCase().indexOf(key.toLowerCase()) !== -1\n        || String(lastName).toLowerCase().indexOf(key.toLowerCase()) !== -1\n      );\n    });\n  }\n\n  return onlyActive\n    ? res.filter((user) => user.is_active)\n    : res;\n}\n\nexport default filterUsers;\n","import { useState } from 'react';\n\nfunction useForm() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [formValidity, setFormValidity] = useState(false);\n\n  function handleChange(e) {\n    const { target } = e;\n    const { name, value, validationMessage } = target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    setErrors({\n      ...errors,\n      [name]: validationMessage,\n    });\n  }\n\n  function validateForm(e) {\n    const { form } = e.target;\n    setFormValidity(form.checkValidity());\n  }\n\n  function reset() {\n    setValues({});\n    setErrors({});\n    setFormValidity({});\n  }\n\n  return {\n    handleChange,\n    validateForm,\n    setValues,\n    setFormValidity,\n    reset,\n    values,\n    errors,\n    formValidity,\n  };\n}\n\nexport default useForm;\n","import React from 'react';\n\nimport useForm from '../../hooks/useForm';\n\nimport './SearchForm.css';\n\nfunction SearchForm(props) {\n  const {\n    checkBoxState, onCheck, onSubmit, onReset,\n  } = props;\n\n  const {\n    handleChange,\n    validateForm,\n    setValues,\n    setFormValidity,\n    reset,\n    values,\n    errors,\n    formValidity,\n  } = useForm();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(values.key, reset);\n  }\n\n  function handleReset(e) {\n    e.preventDefault();\n    onReset();\n    reset();\n  }\n\n  React.useEffect(() => {\n    const searchKey = localStorage.getItem('searchKey');\n\n    if (searchKey) {\n      setValues({\n        key: searchKey,\n      });\n      setFormValidity(true);\n    }\n  }, [setFormValidity]);\n\n  return (\n    <>\n      <div className=\"search-form\">\n        <div className=\"search-form__input-container\">\n          <form\n            className=\"search-form__form\"\n            id=\"search-form\"\n            onChange={validateForm}\n            onSubmit={handleSubmit}\n          >\n            <input\n              id=\"user\"\n              name=\"key\"\n              type=\"text\"\n              value={values.key || ''}\n              onChange={handleChange}\n              className=\"search-form__input\"\n              placeholder=\"User\"\n              minLength=\"2\"\n              required\n            />\n            {formValidity && (\n              <button\n                type=\"button\"\n                aria-label=\"Reset\"\n                className=\"search-form__reset\"\n                onClick={handleReset}\n              />\n            )}\n            <button\n              className={`search-form__button ${\n                !formValidity ? 'search-form__button_disabled' : ''\n              }`}\n              type=\"submit\"\n              aria-label=\"Search\"\n              disabled={!formValidity}\n            />\n          </form>\n          {errors.key && (\n            <span className=\"search-form__input-error\">{errors.key}</span>\n          )}\n        </div>\n        <label className=\"search-form__filter\" htmlFor=\"filter\">\n          Only Active\n          <input\n            id=\"filter\"\n            type=\"checkbox\"\n            className=\"search-form__filter-checkbox\"\n            checked={checkBoxState}\n            onChange={onCheck}\n          />\n        </label>\n      </div>\n    </>\n  );\n}\n\nexport default SearchForm;\n","function getTime(time) {\n  return new Date(Date.parse(time)).toLocaleString('ru-RU');\n}\n\nexport default getTime;\n","import React from 'react';\n\nimport getTime from '../../utils/getTime';\n\nimport './UserCard.css';\n\nfunction UserCard(props) {\n  const { user } = props;\n\n  return (\n    <div className=\"user-card\">\n      <div className=\"user-card__heading\">\n        <div\n          className={`user-card__user-status ${\n            user.is_active && 'user-card__user-status_active'\n          }`}\n        />\n        <h2 className=\"user-card__username\">{user.username}</h2>\n        <p className=\"user-card__fullname\">\n          {`${user.first_name ? user.first_name : ''} ${\n            user.last_name ? user.last_name : ''\n          }`}\n        </p>\n      </div>\n      <div className=\"user-card__info\">\n        <p className=\"user-card__user-id\">{user.id}</p>\n        {user.last_login && (\n          <p className=\"user-card__last-login\">{getTime(user.last_login)}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default UserCard;\n","import React from 'react';\n\nimport filterUsers from '../../utils/filterUsers';\n\nimport SearchForm from '../SearchForm/SearchForm';\nimport UserCard from '../UserCard/UserCard';\n\nimport './UsersList.css';\n\nfunction UsersList(props) {\n  const { users } = props;\n\n  const [searchKey, setSearchKey] = React.useState('');\n  const [activeUsersOnly, setActiveUsersOnly] = React.useState(false);\n  const [shownUsers, setShownUsers] = React.useState([]);\n  const [isNothingFound, setIsNothingFound] = React.useState(false);\n\n  const handleActiveUsersOnly = (e) => {\n    setActiveUsersOnly(e.target.checked);\n    localStorage.setItem('activeUsersOnly', e.target.checked);\n  };\n\n  const handleSearchQuery = (key) => {\n    setSearchKey(key);\n    localStorage.setItem('searchKey', key);\n  };\n\n  const handleSearchFormReset = () => {\n    setSearchKey(null);\n    setIsNothingFound(false);\n    localStorage.removeItem('searchKey');\n  };\n\n  React.useEffect(() => {\n    setActiveUsersOnly(localStorage.getItem('activeUsersOnly') === 'true');\n    setSearchKey(localStorage.getItem('searchKey'));\n  }, [searchKey, activeUsersOnly]);\n\n  React.useEffect(() => {\n    const filteredUsers = filterUsers(users, searchKey, activeUsersOnly);\n\n    !filteredUsers.length ? setIsNothingFound(true) : setIsNothingFound(false);\n\n    setShownUsers(filteredUsers);\n  }, [searchKey, activeUsersOnly]);\n\n  return (\n    <section className=\"users-list\">\n      <h1 className=\"users-list__title\">Users List</h1>\n      <SearchForm\n        checkBoxState={activeUsersOnly}\n        onCheck={handleActiveUsersOnly}\n        onSubmit={handleSearchQuery}\n        onReset={handleSearchFormReset}\n      />\n      {isNothingFound ? (\n        <p className=\"users-list__message\">Nothing Found</p>\n      ) : (\n        <div className=\"users-list__grid\">\n          {shownUsers\n            .sort((a, b) => a.id - b.id)\n            .map((user) => (\n              <UserCard key={user.id} user={user} />\n            ))}\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default UsersList;\n","import React from 'react';\n\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; Khizri Makhmudov for Emphasoft</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from '../Header/Header';\nimport UsersList from '../UsersList/UsersList';\nimport Footer from '../Footer/Footer';\n\nfunction Main(props) {\n  const { isLoggedIn, onSignOut, users } = props;\n  return (\n    <>\n      <Header\n        isLoggedIn={isLoggedIn}\n        onSignOut={onSignOut}\n      />\n      <UsersList\n        users={users}\n      />\n      <Footer />\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nimport './InfoMessage.css';\n\nfunction InfoMessage(props) {\n  const {\n    isShown, code, type,\n  } = props;\n\n  const [messageText, setMessageText] = React.useState('');\n\n  function getMessage(messageType) {\n    if (messageType === 'signup') {\n      return 'An error occurred on sign up';\n    } if (messageType === 'signin') {\n      return 'Wrong username or password';\n    } if (messageType === 'update') {\n      return 'An error occurred on profile update';\n    }\n\n    return 'An error occurred';\n  }\n\n  React.useEffect(() => {\n    if (code === 200 || code === 201) {\n      setMessageText('Data updated');\n    } if (code >= 400) {\n      setMessageText(getMessage(type));\n    }\n  }, [code, type]);\n\n  return (\n    <div className=\"message\">\n      {isShown && (\n        <p className={`message__text ${code >= 400 ? 'message__text_error' : ''}`}>\n          {messageText}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default InfoMessage;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../images/logo.svg';\nimport InfoMessage from '../InfoMessage/InfoMessage';\n\nimport './FormPage.css';\n\nfunction FormPage(props) {\n  const {\n    title,\n    buttonText,\n    captionText,\n    children,\n    isValid,\n    validate,\n    onSubmit,\n    infoMessage,\n  } = props;\n\n  return (\n    <div className=\"form-page\">\n      <Link className=\"form-page__logo-link\" to=\"/\">\n        <img\n          className=\"form-page__logo\"\n          src={logo}\n          alt=\"Emphasoft Logo\"\n        />\n      </Link>\n      <h1 className=\"form-page__title\">{title}</h1>\n      <form\n        className=\"form-page__form\"\n        id=\"form-page\"\n        autoComplete=\"on\"\n        onChange={validate}\n        onSubmit={onSubmit}\n        noValidate\n      >\n        {children}\n      </form>\n      <InfoMessage {...infoMessage} />\n      <button\n        form=\"form-page\"\n        className={`form-page__button ${\n          !isValid ? 'form-page__button_disabled' : ''\n        }`}\n        type=\"submit\"\n        disabled={!isValid}\n      >\n        {buttonText}\n      </button>\n      <div className=\"form-page__caption\">\n        <p className=\"form-page__caption-text\">{captionText}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default FormPage;\n","import React from 'react';\n\nimport useForm from '../../hooks/useForm';\nimport FormPage from '../FormPage/FormPage';\n\nimport './Login.css';\n\nfunction Login(props) {\n  const {\n    isSubmitting, buttonState, infoMessage, onSubmit,\n  } = props;\n\n  const {\n    handleChange, validateForm, values, errors, formValidity,\n  } = useForm();\n\n  const { username, password } = values;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(username, password);\n  }\n\n  return (\n    <div className=\"login\">\n      <FormPage\n        title=\"Hello!\"\n        buttonText={buttonState || 'Sign In'}\n        captionText=\"Don't have an account? Please contact the administrator\"\n        isValid={formValidity}\n        validate={validateForm}\n        onSubmit={handleSubmit}\n        infoMessage={infoMessage}\n      >\n        <>\n          <label htmlFor=\"username\" className=\"form-page__label\">\n            Username\n            <input\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              onChange={handleChange}\n              className={`form-page__input ${\n                errors.username ? 'form-page__input_type_error' : ''\n              }`}\n              placeholder=\"your_user_name\"\n              pattern=\"^[\\w.@+-]+$\"\n              autoComplete=\"username\"\n              minLength=\"1\"\n              disabled={isSubmitting}\n              required\n            />\n            {errors.username && (\n              <span className=\"form-page__input-error\">{errors.username}</span>\n            )}\n          </label>\n          <label htmlFor=\"password\" className=\"form-page__label\">\n            Password\n            <input\n              id=\"user-password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n              className={`form-page__input ${\n                errors.password ? 'form-page__input_type_error' : ''\n              }`}\n              autoComplete=\"current-password\"\n              placeholder=\"&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;\"\n              minLength=\"8\"\n              disabled={isSubmitting}\n              required\n            />\n            {errors.password && (\n              <span className=\"form-page__input-error\">{errors.password}</span>\n            )}\n          </label>\n        </>\n      </FormPage>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nimport { Route, Switch, useHistory } from 'react-router';\nimport api from '../../utils/api';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Main from '../Main/Main';\nimport Login from '../Login/Login';\n\nimport './App.css';\n\nfunction App() {\n  const history = useHistory();\n\n  const [users, setUsers] = React.useState([]);\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isChecking, setIsChecking] = React.useState(true);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const [buttonState, setButtonState] = React.useState('');\n  const [infoMessage, setInfoMessage] = React.useState({\n    isShown: false,\n    type: '',\n    code: 200,\n  });\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        setIsChecking(true);\n        const userToken = localStorage.getItem('token');\n        if (userToken) {\n          const res = await api.checkAndGet(userToken);\n          if (res) {\n            setIsLoggedIn(true);\n            setUsers(res);\n            history.push('/');\n          }\n        }\n      } catch (err) {\n        setIsLoggedIn(false);\n        history.push('/signin');\n      } finally {\n        setIsChecking(false);\n      }\n    })();\n  }, [history]);\n\n  function handleLoading(loading, text) {\n    if (loading) {\n      setButtonState(text);\n    } else {\n      setButtonState('');\n    }\n  }\n\n  const handleSignIn = async (username, password) => {\n    try {\n      setIsSubmitting(true);\n      handleLoading(true, 'Signing In...');\n      const user = await api.signInUser({\n        username,\n        password,\n      });\n\n      const res = await api.checkAndGet(user.token);\n\n      localStorage.setItem('token', user.token);\n      setUsers(res);\n      setIsLoggedIn(true);\n      history.push('/');\n    } catch (err) {\n      setInfoMessage({\n        ...infoMessage,\n        isShown: true,\n        code: err.status,\n        type: 'signin',\n      });\n    } finally {\n      setIsSubmitting(false);\n      handleLoading(false);\n    }\n  };\n\n  const handleSignOut = async (e) => {\n    e.preventDefault();\n    localStorage.clear();\n    setIsLoggedIn(false);\n    history.push('/');\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__container\">\n        <Switch>\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            isLoggedIn={isLoggedIn}\n            isChecking={isChecking}\n            component={Main}\n            users={users}\n            onSignOut={handleSignOut}\n          />\n          <Route path=\"/signin\">\n            <Login\n              isSubmitting={isSubmitting}\n              buttonState={buttonState}\n              infoMessage={infoMessage}\n              onSubmit={handleSignIn}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './components/App/App';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}